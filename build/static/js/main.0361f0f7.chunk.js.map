{"version":3,"sources":["components/common/Navigation/Navigation.js","components/Search/CalendarEvent.js","components/Search/File.js","components/Search/Contact.js","components/Search/Message.js","components/Search/Tweet.js","containers/Search/Search.js","utils/parser_util.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","props","useState","showSearch","setShowSearch","leftNav","className","href","variant","placeholder","inputlabel","id","value","search","inputProps","onChange","event","setSearch","target","console","log","startAdornment","InputAdornment","position","style","color","onClick","rightNav","dateMap","0","1","2","3","4","5","6","7","8","9","10","11","CalendarComponent","calendar","toRender","matching_terms","some","substring","toLowerCase","includes","titleHighlight","title","invitees","split","map","invitee","highlight","Tooltip","IconButton","aria-label","slice","toUpperCase","card","Card","CardContent","Typography","component","date","getDate","gutterBottom","getMonth","getFullYear","typeMap","docx","File","file","users","shared_with","user","path","length","created","Contact","contact","list","setList","name","symbol","listDisplay","listItem","last_contact","Divider","CardActions","Button","size","emails","Email","fontSize","phones","Message","message","author","timeStamp","timestamp","toLocaleString","hour","minute","hour12","addAnim","animate","channel","Tweet","tweet","Search","calendarEve","setCalender","contactsEve","setContacts","slackEve","setSlack","dropboxEve","setDropbox","tweetEve","setTweet","msgEveNew","setMsgNew","loading","setLoading","useEffect","axios","post","then","res","data","success","calendarParsedEvents","cal","forEach","index","Date","sort","a","b","parseCalendar","filesParsed","dropbox","slackMessagesParsed","slack","contactsParsed","contacts","tweetsParsed","interval","setInterval","msg","clearInterval","calendarEvents","key","fileRes","contactRes","slackRes","msgsNew","tweetRes","msgs","width","Event","Chat","Twitter","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"uWA+EeA,EAzEI,SAACC,GAAW,IAAD,EACQC,oBAAS,GADjB,mBACrBC,EADqB,KACTC,EADS,KAStBC,EACJ,yBAAKC,UAAU,0BACb,yBAAKA,UAAU,qBACZ,IACD,yBACEA,UAAU,uBAKd,yBAAKA,UAAU,qBACZ,IACD,uBAAGC,KAAK,IAAID,UAAU,qBAAtB,UAIF,yBAAKA,UAAU,qBACZ,IACD,uBAAGC,KAAK,IAAID,UAAU,qBAAtB,SAIF,yBAAKA,UAAU,qBACZ,IACAH,EAEC,kBAAC,IAAD,CACEK,QAAQ,WACRC,YAAY,SACZC,WAAW,SACXC,GAAG,SACHC,MAAOX,EAAMY,OACbC,WAAY,CAAE,aAAc,SAC5BC,SArCiB,SAACC,GAC1Bf,EAAMgB,UAAUD,EAAME,OAAON,OAC7BO,QAAQC,IAAInB,EAAMY,SAoCVQ,eACE,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SACvB,kBAAC,IAAD,CAAYC,MAAO,CAAEC,MAAO,gBAKpC,MAEF,yBAAKnB,UAAU,qBACb,yBACEA,UAAU,2CACVoB,QArDa,WACnBtB,GAAeD,KAkDX,YASAwB,EACJ,yBAAKrB,UAAU,2BAAf,4BAGF,OACE,yBAAKA,UAAU,UACZD,EADH,IACasB,I,4DCnEXC,G,MAAU,CACdC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,GAAI,MACJC,GAAI,QA4ESC,MA1Ef,SAA2BxC,GACzB,IAAMyC,EAAWzC,EAAMyC,SACjB7B,EAASZ,EAAMY,OACf8B,EAAWD,EAASE,eAAeC,MAAK,SAACC,GAAD,OAC5CA,EAAUC,cAAcC,SAASnC,EAAOkC,kBAEpCE,EAAiBP,EAASQ,MAC7BH,cACAC,SAASnC,EAAOkC,eACf,YACA,GAEEI,EADgBT,EAASS,SAASC,MAAM,MACfC,KAAI,SAACC,GAClC,IAAMC,EAAYD,EAAQN,SAASnC,EAAOkC,eAAiB,YAAc,GACzE,OACE,kBAACS,EAAA,EAAD,CAASN,MAAOI,GACd,kBAACG,EAAA,EAAD,CACEC,aAAYJ,EACZhD,UAAU,gCACVmB,MAAO8B,GAEND,EAAQK,MAAM,EAAG,GAAGC,mBAKvBC,EACJ,6BACE,kBAACC,EAAA,EAAD,CAAMxD,UAAU,kBAAkBE,QAAQ,YACxC,kBAACuD,EAAA,EAAD,CAAazD,UAAU,wBACrB,yBAAKA,UAAU,6BACb,kBAAC0D,EAAA,EAAD,CACE1D,UAAU,wBACVE,QAAQ,KACRyD,UAAU,MAETvB,EAASwB,KAAKC,WAEjB,kBAACH,EAAA,EAAD,CACE1D,UAAU,8BACVmB,MAAM,gBACN2C,cAAY,GAHd,UAMIxC,EAAQc,EAASwB,KAAKG,YAN1B,aAOO3B,EAASwB,KAAKI,iBAIvB,6BACE,kBAACN,EAAA,EAAD,CACE1D,UAAS,iCAA4B2C,GACrCzC,QAAQ,KACRyD,UAAU,MAETvB,EAASQ,OAEZ,kBAACc,EAAA,EAAD,CACE1D,UAAU,8BACVmB,MAAM,gBACN2C,cAAY,GAEX,IALH,iBAQA,yBAAK9D,UAAU,6BAA6B6C,OAMtD,OAAO,6BAAMR,EAAWkB,EAAO,O,kCCnF3BU,EAAU,CACdC,KAAM,kBAAC,IAAD,MACN,OAAQ,kBAAC,IAAD,OAEJ5C,EAAU,CACdC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,GAAI,MACJC,GAAI,OAoESiC,MAlEf,SAAcxE,GACZ,IAAMyE,EAAOzE,EAAMyE,KACb7D,EAASZ,EAAMY,OACf8B,EAAW+B,EAAK9B,eAAeC,MAAK,SAACC,GAAD,OACxCA,EAAUC,cAAcC,SAASnC,EAAOkC,kBAEpCE,EAAiByB,EAAKxB,MAAMH,cAAcC,SAASnC,EAAOkC,eAC5D,YACA,GACE4B,EAAUD,EAAKE,YACjBF,EAAKE,YAAYvB,KAAI,SAACwB,GACpB,IAAMtB,EAAYsB,EAAK7B,SAASnC,EAAOkC,eACnC,YACA,GACJ,OACE,kBAACS,EAAA,EAAD,CAASN,MAAO2B,GACd,kBAACpB,EAAA,EAAD,CACEC,aAAYmB,EACZvE,UAAU,yBACVmB,MAAO8B,GAENsB,EAAKlB,MAAM,EAAG,GAAGC,mBAK1B,KACEC,EACJ,6BACE,kBAACC,EAAA,EAAD,CAAMxD,UAAU,cAAcE,QAAQ,YACpC,kBAACuD,EAAA,EAAD,CAAazD,UAAU,oBACrB,yBAAKA,UAAU,qBACZiE,EAAQG,EAAKI,KAAKnB,MAAMe,EAAKI,KAAKC,OAAS,EAAGL,EAAKI,KAAKC,UAE3D,yBAAKzE,UAAU,oBACb,kBAAC0D,EAAA,EAAD,CACE1D,UAAS,6BAAwB2C,GACjCzC,QAAQ,KACRyD,UAAU,MAETS,EAAKxB,MAAMS,MAAM,EAAGe,EAAKxB,MAAM6B,OAAS,KAG7C,yBAAKzE,UAAU,yBACb,yBAAKA,UAAU,yBACdqE,GAED,kBAACX,EAAA,EAAD,CAAY1D,UAAU,yBAAyBE,QAAQ,MACpDkE,EAAKM,QAAQb,WAEhB,kBAACH,EAAA,EAAD,CACE1D,UAAU,0BACVmB,MAAM,iBAFR,UAKIG,EAAQ8C,EAAKM,QAAQX,YALzB,aAMOK,EAAKM,QAAQV,oBAO9B,OAAO,6BAAM3B,EAAWkB,EAAO,O,qDChF3BjC,EAAU,CACdC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,GAAI,MACJC,GAAI,OAuESyC,MArEf,SAAiBhF,GACf,IAAMiF,EAAUjF,EAAMiF,QAChBrE,EAASZ,EAAMY,OACf8B,EAAWuC,EAAQtC,eAAeC,MAAK,SAACC,GAAD,OAC3CA,EAAUC,cAAcC,SAASnC,EAAOkC,kBAJpB,EAME7C,mBAAS,IANX,mBAMfiF,EANe,KAMTC,EANS,KAOhB7B,EAAY2B,EAAQG,KAAKtC,cAAcC,SAASnC,EAAOkC,eACzD,aACA,GACEuC,EACJ,yBACE5B,aAAYwB,EAAQG,KACpB/E,UAAS,mCAA8BiD,GACvC9B,MAAO8B,GAEN2B,EAAQG,KAAK1B,MAAM,EAAG,GAAGC,eAGxB2B,EAAcJ,EAAK9B,KAAI,SAACmC,GAC5B,OAAO,yBAAKlF,UAAU,yBAAyBkF,MAE3C3B,EACJ,6BACE,kBAACC,EAAA,EAAD,CAAMxD,UAAU,iBAAiBE,QAAQ,YACvC,kBAACuD,EAAA,EAAD,CAAazD,UAAU,uBACrB,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,0BAA0BgF,GACzC,yBAAKhF,UAAS,wBAA2B4E,EAAQG,MACjD,yBAAK/E,UAAU,wBACZ,IACA4E,EAAQO,aAAatB,UACtB,yBAAK7D,UAAU,8BACZsB,EAAQsD,EAAQO,aAAapB,eAIpC,kBAACqB,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,QACLpE,MAAM,UACNnB,UAAU,4BACVoB,QAAS,WACP0D,EAAQF,EAAQY,UAGlB,kBAACC,EAAA,EAAD,CAAOC,SAAS,WAGlB,kBAACJ,EAAA,EAAD,CACEC,KAAK,QACLpE,MAAM,UACNnB,UAAU,6BACVoB,QAAS,WACP0D,EAAQF,EAAQe,UAGlB,kBAAC,IAAD,CAAWD,SAAS,YAGxB,yBAAK1F,UAAU,+BAA+BiF,MAKtD,OAAO,6BAAM5C,EAAWkB,EAAO,OCnF3BjC,EAAU,CACdC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,GAAI,MACJC,GAAI,OAuES0D,MArEf,SAAiBjG,GACf,IAAMkG,EAAUlG,EAAMkG,QAChBtF,EAASZ,EAAMY,OACf8B,EAAWwD,EAAQvD,eAAeC,MAAK,SAACC,GAAD,OAC3CA,EAAUC,cAAcC,SAASnC,EAAOkC,kBAEpCE,EAAiBkD,EAAQA,QAC5BpD,cACAC,SAASnC,EAAOkC,eACf,YACA,GACEQ,EAAY4C,EAAQC,OAAOpD,SAASnC,EAAOkC,eAC7C,YACA,GAEEsD,EAAYF,EAAQG,UAAUC,eAAe,QAAS,CAC1DC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAEJC,EAAa1G,EAAM2G,QAAU,MAAM,GAEnC/C,EACJ,6BACE,kBAACC,EAAA,EAAD,CAAMxD,UAAS,yBAAoBqG,GAAWnG,QAAQ,YACpD,kBAACuD,EAAA,EAAD,CAAazD,UAAU,oBACrB,yBAAKA,UAAU,qBACb,kBAACkD,EAAA,EAAD,CAASN,MAAOiD,EAAQC,QACtB,kBAAC3C,EAAA,EAAD,CACEC,aAAYyC,EAAQC,OACpB9F,UAAU,yBACVmB,MAAO8B,GAEN4C,EAAQC,OAAOzC,MAAM,EAAG,GAAGC,iBAIlC,yBAAKtD,UAAU,uBAAf,QAEE,kBAAC0D,EAAA,EAAD,CACE1D,UAAS,6BAAwB2C,GACjCzC,QAAQ,KACRyD,UAAU,MAETkC,EAAQA,UAGb,yBAAK7F,UAAU,yBACb,yBAAKA,UAAU,+BAA+B6F,EAAQU,SACtD,kBAAC7C,EAAA,EAAD,CACE1D,UAAU,4BACVE,QAAQ,MACR6F,GACF,kBAACrC,EAAA,EAAD,CACE1D,UAAU,0BACVmB,MAAM,iBAFR,WAIO0E,EAAQG,UAAUnC,UAJzB,YAKIvC,EAAQuE,EAAQG,UAAUjC,kBAQxC,OAAO,6BAAM1B,EAAWkB,EAAO,OChF3BjC,EAAU,CACdC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,GAAI,MACJC,GAAI,OAmESsE,MAjEf,SAAe7G,GACb,IAAM8G,EAAQ9G,EAAM8G,MACdlG,EAASZ,EAAMY,OACf8B,EAAWoE,EAAMnE,eAAeC,MAAK,SAACC,GAAD,OACzCA,EAAUC,cAAcC,SAASnC,EAAOkC,kBAEpCE,EAAiB8D,EAAMZ,QAC1BpD,cACAC,SAASnC,EAAOkC,eACf,YACA,GACEQ,EAAYwD,EAAMlC,KAAK7B,SAASnC,EAAOkC,eACzC,YACA,GAEEsD,EAAYU,EAAMT,UAAUC,eAAe,QAAS,CACxDC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAEJ7C,EACJ,6BACE,kBAACC,EAAA,EAAD,CAAMxD,UAAU,iBAAiBE,QAAQ,YACvC,kBAACuD,EAAA,EAAD,CAAazD,UAAU,oBACrB,yBAAKA,UAAU,qBACb,kBAACkD,EAAA,EAAD,CAASN,MAAO6D,EAAMlC,MACpB,kBAACpB,EAAA,EAAD,CACEC,aAAYqD,EAAMlC,KAClBvE,UAAU,yBACVmB,MAAO8B,GAENwD,EAAMlC,KAAKlB,MAAM,EAAG,GAAGC,iBAI9B,yBAAKtD,UAAU,uBAAf,WAEE,kBAAC0D,EAAA,EAAD,CACE1D,UAAS,6BAAwB2C,GACjCzC,QAAQ,KACRyD,UAAU,MAET8C,EAAMZ,UAGX,yBAAK7F,UAAU,yBACb,kBAAC0D,EAAA,EAAD,CAAY1D,UAAU,4BAA4BE,QAAQ,MACvD6F,GAEH,kBAACrC,EAAA,EAAD,CACE1D,UAAU,0BACVmB,MAAM,iBAFR,WAIOsF,EAAMT,UAAUnC,UAJvB,YAKIvC,EAAQmF,EAAMT,UAAUjC,YAL5B,YAMM0C,EAAMT,UAAUhC,oBAOhC,OAAO,6BAAM3B,EAAWkB,EAAO,O,8ECyFlBmD,MAzJf,SAAgB/G,GAAQ,IAAD,EACcC,mBAAS,IADvB,mBACd+G,EADc,KACDC,EADC,OAEchH,mBAAS,IAFvB,mBAEdiH,EAFc,KAEDC,EAFC,OAGQlH,mBAAS,IAHjB,mBAGdmH,EAHc,KAGJC,EAHI,OAIYpH,mBAAS,IAJrB,mBAIdqH,EAJc,KAIFC,EAJE,OAKQtH,mBAAS,IALjB,mBAKduH,EALc,KAKJC,EALI,OAMUxH,mBAAS,IANnB,mBAMdyH,EANc,KAMHC,EANG,OAOS1H,oBAAS,GAPlB,mBAOd2H,EAPc,KAOLC,EAPK,KASrBC,qBAAU,WACRD,GAAW,GACXE,IACGC,KADH,uEAIGC,MAAK,SAACC,GAEL,GADAhH,QAAQC,IAAI+G,EAAIC,MACQ,GAApBD,EAAIC,KAAKC,QAAiB,CAC5BlH,QAAQC,IAAI+G,EAAIC,MAChBN,GAAW,GACX,IAAMQ,ECvCa,SAACC,GAC5B,IAAM7F,EAAW6F,EAMjB,OALA7F,EAASA,SAAS8F,SAAQ,SAAU9F,EAAU+F,GAC5C/F,EAASwB,KAAO,IAAIwE,KAAKhG,EAASwB,SAGpCxB,EAASA,SAASiG,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE1E,KAAO2E,EAAE3E,KAAO,GAAK,KAClDxB,EAASA,SDgCqBoG,CAAcX,EAAIC,KAAK1F,UAC9CqG,IC9BWC,ED8Bcb,EAAIC,KAAKY,SC7BxCA,QAAQR,SAAQ,SAAUQ,EAASP,GACzCO,EAAQhE,QAAU,IAAI0D,KAAKM,EAAQhE,YAGrCgE,EAAQA,QAAQL,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE5D,QAAU6D,EAAE7D,QAAU,GAAK,KACtDgE,EAAQA,SDyBDC,ICtBcC,EDsBsBf,EAAIC,KAAKc,OCrBrDA,MAAMV,SAAQ,SAAUrC,EAASsC,GACrCtC,EAAQG,UAAY,IAAIoC,KAAKvC,EAAQG,cAGvC4C,EAAMA,MAAMP,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEtC,UAAYuC,EAAEvC,UAAY,GAAK,KACtD4C,EAAMA,ODiBCC,ICdeC,EDciBjB,EAAIC,KAAKgB,UCb9CA,SAASZ,SAAQ,SAAUtD,EAASuD,GAC3CvD,EAAQO,aAAe,IAAIiD,KAAKxD,EAAQO,iBAG1C2D,EAASA,SAAST,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEnD,aAAeoD,EAAEpD,aAAe,GAAK,KAClE2D,EAASA,UDSFC,ICNYtC,EDMeoB,EAAIC,KAAKrB,OCL5CA,MAAMyB,SAAQ,SAAUzB,EAAO0B,GACnC1B,EAAMT,UAAY,IAAIoC,KAAK3B,EAAMT,cAGnCS,EAAMA,MAAM4B,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEnD,aAAeoD,EAAEpD,aAAe,GAAK,KAC5DsB,EAAMA,ODCLG,EAAYoB,GACZlB,EAAY+B,GACZ7B,EAAS2B,GACTzB,EAAWuB,GACXrB,EAAS2B,GACTvB,GAAW,GCZM,IAACf,EATGqC,EATDF,EATHF,OD2CtB,IAEHjB,qBAAU,WACR,IAAMuB,EAAWC,aAAY,WAC3BzB,GAAW,GACXE,IACGC,KADH,oEAIGC,MAAK,SAACC,GAEL,GAAwB,GAApBA,EAAIC,KAAKC,QAAiB,CAC5BlH,QAAQC,IAAI+G,EAAIC,MAChB,IAAMoB,EAAMrB,EAAIC,KAAKxH,MACrB4I,EAAG,UAAgB,IAAId,KACvBd,EAAU,GAAD,mBAAKD,GAAL,CAAgB6B,KACzB1B,GAAW,SAIhB,KACH,OAAO,kBAAM2B,cAAcH,MAC1B,CAACjC,EAAUM,IACd,IAAM+B,EAAiBzC,EAAY5D,KAAI,SAACX,GACtC,OACE,kBAAC,EAAD,CACEA,SAAUA,EACV7B,OAAQZ,EAAMY,OACd8I,IAAKjH,EAAS/B,QAIdiJ,EAAUrC,EAAWlE,KAAI,SAACqB,GAC9B,OAAO,kBAAC,EAAD,CAAeA,KAAMA,EAAM7D,OAAQZ,EAAMY,OAAQ8I,IAAKjF,EAAK/D,QAE9DkJ,EAAa1C,EAAY9D,KAAI,SAAC6B,GAClC,OACE,kBAAC,EAAD,CACEA,QAASA,EACTrE,OAAQZ,EAAMY,OACd8I,IAAKzE,EAAQvE,QAIbmJ,EAAWzC,EAAShE,KAAI,SAAC6F,GAC7B,OACE,kBAAC,EAAD,CAAkB/C,QAAS+C,EAAOrI,OAAQZ,EAAMY,OAAQ8I,IAAKT,EAAMvI,QAGjEoJ,EAAUpC,EAAUtE,KAAI,SAAC6F,GAC7B,OACE,kBAAC,EAAD,CACE/C,QAAS+C,EACTrI,OAAQZ,EAAMY,OACd8I,IAAKT,EAAMvI,GACXiG,SAAO,OAIPoD,EAAWvC,EAASpE,KAAI,SAAC0D,GAC7B,OAAO,kBAAC,EAAD,CAAgBA,MAAOA,EAAOlG,OAAQZ,EAAMY,YAE/CoJ,EAAI,sBAAOH,GAAP,YAAoBC,IAC9B,OACE,yBAAKzJ,UAAU,oBACb,mDACsB,0BAAMA,UAAU,aAAhB,SAEtB,yBAAKA,UAAU,UACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,6BACb,wBAAIA,UAAU,2BACXuH,GACC,yBAAKvH,UAAU,WACb,kBAAC,IAAD,CAAM4J,MAAM,SAEb,IACH,kBAACC,EAAA,EAAD,CAAOnE,SAAS,UANlB,yBASA,yBAAK1F,UAAU,8BAA8BoJ,IAE/C,yBAAKpJ,UAAU,oCACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,2BACZ,kBAAC8J,EAAA,EAAD,CAAMpE,SAAS,UADjB,6BAIA,yBAAK1F,UAAU,4BAA4B2J,IAE7C,yBAAK3J,UAAU,kBACb,wBAAIA,UAAU,2BACZ,kBAAC,IAAD,CAAa0F,SAAS,UADxB,0BAIA,yBAAK1F,UAAU,4BAA4BsJ,IAE7C,yBAAKtJ,UAAU,kBACb,wBAAIA,UAAU,2BACZ,kBAAC+J,EAAA,EAAD,CAASrE,SAAS,UADpB,oCAIA,yBAAK1F,UAAU,4BAA4B0J,KAG/C,yBAAK1J,UAAU,uBACb,wBAAIA,UAAU,2BACX,IACD,kBAAC,IAAD,CAAc0F,SAAS,UAFzB,uBAKA,yBAAK1F,UAAU,gCAAgCuJ,Q,MEzI5CS,MAjBf,WAAgB,IAAD,EACepK,mBAAS,IADxB,mBACNW,EADM,KACEI,EADF,KAEb,OACE,yBAAKX,UAAU,OACb,kBAAC,EAAD,CAAYO,OAAQA,EAAQI,UAAWA,IAErC,kBAAC,EAAD,CAAQJ,OAAQA,MCJJ0J,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjD,MAAK,SAAAkD,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpK,QAAQoK,MAAMA,EAAMpF,c","file":"static/js/main.0361f0f7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Navigation.css';\nimport Input from '@material-ui/core/InputBase';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst Navigation = (props) => {\n  const [showSearch, setShowSearch] = useState(false);\n  const renderSearch = () => {\n    setShowSearch(!showSearch);\n  };\n  const handlesearchChange = (event) => {\n    props.setSearch(event.target.value);\n    console.log(props.search);\n  };\n  const leftNav = (\n    <div className=\"navbar-left__container\">\n      <div className=\"navbar-left__item\">\n        {' '}\n        <div\n          className=\"navbar-left__logo\"\n          // src={'https://neeva.co/neeva-wordmark.svg'}\n          // alt={'neeva logo'}\n        ></div>\n      </div>\n      <div className=\"navbar-left__item\">\n        {' '}\n        <a href=\"/\" className=\"navbar-left__link\">\n          About\n        </a>\n      </div>\n      <div className=\"navbar-left__item\">\n        {' '}\n        <a href=\"/\" className=\"navbar-left__link\">\n          Blog\n        </a>\n      </div>\n      <div className=\"navbar-left__item\">\n        {' '}\n        {showSearch ? (\n          //   <form>\n          <Input\n            variant=\"outlined\"\n            placeholder=\"Search\"\n            inputlabel=\"Search\"\n            id=\"search\"\n            value={props.search}\n            inputProps={{ 'aria-label': 'naked' }}\n            onChange={handlesearchChange}\n            startAdornment={\n              <InputAdornment position=\"start\">\n                <SearchIcon style={{ color: '#415aff' }} />\n              </InputAdornment>\n            }\n          />\n        ) : //   </form>\n        null}\n      </div>\n      <div className=\"navbar-left__item\">\n        <div\n          className=\"navbar-left__link navbar-left__link-blue\"\n          onClick={renderSearch}\n        >\n          Search\n        </div>\n      </div>\n    </div>\n  );\n  const rightNav = (\n    <div className=\"navbar-right__container\">Join the waitlist →</div>\n  );\n\n  return (\n    <div className=\"navbar\">\n      {leftNav} {rightNav}\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React, { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport IconButton from '@material-ui/core/IconButton';\nimport CardContent from '@material-ui/core/CardContent';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport './SearchComponents.css';\nconst dateMap = {\n  0: 'Jan',\n  1: 'Feb',\n  2: 'Mar',\n  3: 'Apr',\n  4: 'May',\n  5: 'Jun',\n  6: 'Jul',\n  7: 'Aug',\n  8: 'Sep',\n  9: 'Oct',\n  10: 'Nov',\n  11: 'Dec',\n};\nfunction CalendarComponent(props) {\n  const calendar = props.calendar;\n  const search = props.search;\n  const toRender = calendar.matching_terms.some((substring) =>\n    substring.toLowerCase().includes(search.toLowerCase())\n  );\n  const titleHighlight = calendar.title\n    .toLowerCase()\n    .includes(search.toLowerCase())\n    ? 'highlight'\n    : '';\n  const list_invitees = calendar.invitees.split(', ');\n  const invitees = list_invitees.map((invitee) => {\n    const highlight = invitee.includes(search.toLowerCase()) ? 'secondary' : '';\n    return (\n      <Tooltip title={invitee}>\n        <IconButton\n          aria-label={invitee}\n          className=\"search-calendar_invitees-item\"\n          color={highlight}\n        >\n          {invitee.slice(0, 1).toUpperCase()}\n        </IconButton>\n      </Tooltip>\n    );\n  });\n  const card = (\n    <div>\n      <Card className=\"search-calendar\" variant=\"outlined\">\n        <CardContent className=\"search-calendar__box\">\n          <div className=\"search-calendar__date-box\">\n            <Typography\n              className=\"search-calendar__date\"\n              variant=\"h3\"\n              component=\"h2\"\n            >\n              {calendar.date.getDate()}\n            </Typography>\n            <Typography\n              className=\"search-calendar__date-month\"\n              color=\"textSecondary\"\n              gutterBottom\n            >\n              {`${\n                dateMap[calendar.date.getMonth()]\n              }, ${calendar.date.getFullYear()}`}\n            </Typography>\n          </div>\n\n          <div>\n            <Typography\n              className={`search-calendar__title ${titleHighlight}`}\n              variant=\"h6\"\n              component=\"h2\"\n            >\n              {calendar.title}\n            </Typography>\n            <Typography\n              className=\"search-calendar__date-month\"\n              color=\"textSecondary\"\n              gutterBottom\n            >\n              {' '}\n              Participants:\n            </Typography>\n            <div className=\"search-calendar__invitees\">{invitees}</div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n  return <div>{toRender ? card : null}</div>;\n}\n\nexport default CalendarComponent;\n","import React, { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport IconButton from '@material-ui/core/IconButton';\nimport CardContent from '@material-ui/core/CardContent';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport './SearchComponents.css';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport DescriptionIcon from '@material-ui/icons/Description';\nconst typeMap = {\n  docx: <DescriptionIcon />,\n  '.pdf': <PictureAsPdfIcon />,\n};\nconst dateMap = {\n  0: 'Jan',\n  1: 'Feb',\n  2: 'Mar',\n  3: 'Apr',\n  4: 'May',\n  5: 'Jun',\n  6: 'Jul',\n  7: 'Aug',\n  8: 'Sep',\n  9: 'Oct',\n  10: 'Nov',\n  11: 'Dec',\n};\nfunction File(props) {\n  const file = props.file;\n  const search = props.search;\n  const toRender = file.matching_terms.some((substring) =>\n    substring.toLowerCase().includes(search.toLowerCase())\n  );\n  const titleHighlight = file.title.toLowerCase().includes(search.toLowerCase())\n    ? 'highlight'\n    : '';\n  const users = !!file.shared_with\n    ? file.shared_with.map((user) => {\n        const highlight = user.includes(search.toLowerCase())\n          ? 'secondary'\n          : '';\n        return (\n          <Tooltip title={user}>\n            <IconButton\n              aria-label={user}\n              className=\"search-file_users-item\"\n              color={highlight}\n            >\n              {user.slice(0, 1).toUpperCase()}\n            </IconButton>\n          </Tooltip>\n        );\n      })\n    : null;\n  const card = (\n    <div>\n      <Card className=\"search-file\" variant=\"outlined\">\n        <CardContent className=\"search-file__box\">\n          <div className=\"search-file__type\">\n            {typeMap[file.path.slice(file.path.length - 4, file.path.length)]}\n          </div>\n          <div className=\"search-file__box\">\n            <Typography\n              className={`search-file__title ${titleHighlight}`}\n              variant=\"h6\"\n              component=\"h2\"\n            >\n              {file.title.slice(1, file.title.length - 1)}\n            </Typography>\n          </div>\n          <div className=\"search-file__date-box\">\n            <div className=\"search-file__user-box\">\n            {users}\n            </div>\n            <Typography className=\"search-file__date-date\" variant=\"h6\">\n              {file.created.getDate()}\n            </Typography>\n            <Typography\n              className=\"search-file__date-month\"\n              color=\"textSecondary\"\n            >\n              {`${\n                dateMap[file.created.getMonth()]\n              }, ${file.created.getFullYear()}`}\n            </Typography>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n  return <div>{toRender ? card : null}</div>;\n}\n\nexport default File;\n","import React, { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport Divider from '@material-ui/core/Divider';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Email } from '@material-ui/icons';\nimport './SearchComponents.css';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\n\nconst dateMap = {\n  0: 'Jan',\n  1: 'Feb',\n  2: 'Mar',\n  3: 'Apr',\n  4: 'May',\n  5: 'Jun',\n  6: 'Jul',\n  7: 'Aug',\n  8: 'Sep',\n  9: 'Oct',\n  10: 'Nov',\n  11: 'Dec',\n};\nfunction Contact(props) {\n  const contact = props.contact;\n  const search = props.search;\n  const toRender = contact.matching_terms.some((substring) =>\n    substring.toLowerCase().includes(search.toLowerCase())\n  );\n  const [list, setList] = useState([]);\n  const highlight = contact.name.toLowerCase().includes(search.toLowerCase())\n    ? '-secondary'\n    : '';\n  const symbol = (\n    <div\n      aria-label={contact.name}\n      className={`search-contact_users-item${highlight}`}\n      color={highlight}\n    >\n      {contact.name.slice(0, 1).toUpperCase()}\n    </div>\n  );\n  const listDisplay = list.map((listItem) => {\n    return <div className=\"search-contact__phone\">{listItem}</div>;\n  });\n  const card = (\n    <div>\n      <Card className=\"search-contact\" variant=\"outlined\">\n        <CardContent className=\"search-contact__box\">\n          <div className=\"search-contact__box-top\">\n            <div className=\"search-contact__sybmol\">{symbol}</div>\n            <div className={`search-contact__name`}>{contact.name}</div>\n            <div className=\"search-contact__date\">\n              {' '}\n              {contact.last_contact.getDate()}\n              <div className=\"search-contact__date-month\">\n                {dateMap[contact.last_contact.getMonth()]}\n              </div>\n            </div>\n          </div>\n          <Divider />\n          <CardActions>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              className=\"search-contact__email-box\"\n              onClick={() => {\n                setList(contact.emails);\n              }}\n            >\n              <Email fontSize=\"large\" />\n            </Button>\n\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              className=\"search-contact__number-box\"\n              onClick={() => {\n                setList(contact.phones);\n              }}\n            >\n              <PhoneIcon fontSize=\"large\" />\n            </Button>\n          </CardActions>\n          <div className=\"search-contact__number-list\">{listDisplay}</div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n  return <div>{toRender ? card : null}</div>;\n}\n\nexport default Contact;\n","import React, { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport IconButton from '@material-ui/core/IconButton';\nimport CardContent from '@material-ui/core/CardContent';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport './SearchComponents.css';\nconst dateMap = {\n  0: 'Jan',\n  1: 'Feb',\n  2: 'Mar',\n  3: 'Apr',\n  4: 'May',\n  5: 'Jun',\n  6: 'Jul',\n  7: 'Aug',\n  8: 'Sep',\n  9: 'Oct',\n  10: 'Nov',\n  11: 'Dec',\n};\nfunction Message(props) {\n  const message = props.message;\n  const search = props.search;\n  const toRender = message.matching_terms.some((substring) =>\n    substring.toLowerCase().includes(search.toLowerCase())\n  );\n  const titleHighlight = message.message\n    .toLowerCase()\n    .includes(search.toLowerCase())\n    ? 'highlight'\n    : '';\n  const highlight = message.author.includes(search.toLowerCase())\n    ? 'secondary'\n    : '';\n\n  const timeStamp = message.timestamp.toLocaleString('en-US', {\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true,\n  });\n  const addAnim = !! props.animate ? 'new':''\n\n  const card = (\n    <div>\n      <Card className={`search-message ${addAnim}`} variant=\"outlined\">\n        <CardContent className=\"search-file__box\">\n          <div className=\"search-file__type\">\n            <Tooltip title={message.author}>\n              <IconButton\n                aria-label={message.author}\n                className=\"search-file_users-item\"\n                color={highlight}\n              >\n                {message.author.slice(0, 1).toUpperCase()}\n              </IconButton>\n            </Tooltip>\n          </div>\n          <div className=\"search-message__box\">\n            says:\n            <Typography\n              className={`search-file__title ${titleHighlight}`}\n              variant=\"h6\"\n              component=\"h2\"\n            >\n              {message.message}\n            </Typography>\n          </div>\n          <div className=\"search-file__date-box\">\n            <div className=\"search-message__channel-box\">{message.channel}</div>\n            <Typography\n              className=\"search-message__date-date\"\n              variant=\"h6\"\n            >{timeStamp}</Typography>\n            <Typography\n              className=\"search-file__date-month\"\n              color=\"textSecondary\"\n            >\n              {` ${message.timestamp.getDate()},${\n                dateMap[message.timestamp.getMonth()]\n              }`}\n            </Typography>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n  return <div>{toRender ? card : null}</div>;\n}\n\nexport default Message;\n","import React, { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport IconButton from '@material-ui/core/IconButton';\nimport CardContent from '@material-ui/core/CardContent';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport './SearchComponents.css';\nconst dateMap = {\n  0: 'Jan',\n  1: 'Feb',\n  2: 'Mar',\n  3: 'Apr',\n  4: 'May',\n  5: 'Jun',\n  6: 'Jul',\n  7: 'Aug',\n  8: 'Sep',\n  9: 'Oct',\n  10: 'Nov',\n  11: 'Dec',\n};\nfunction Tweet(props) {\n  const tweet = props.tweet;\n  const search = props.search;\n  const toRender = tweet.matching_terms.some((substring) =>\n    substring.toLowerCase().includes(search.toLowerCase())\n  );\n  const titleHighlight = tweet.message\n    .toLowerCase()\n    .includes(search.toLowerCase())\n    ? 'highlight'\n    : '';\n  const highlight = tweet.user.includes(search.toLowerCase())\n    ? 'secondary'\n    : '';\n\n  const timeStamp = tweet.timestamp.toLocaleString('en-US', {\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true,\n  });\n  const card = (\n    <div>\n      <Card className=\"search-message\" variant=\"outlined\">\n        <CardContent className=\"search-file__box\">\n          <div className=\"search-file__type\">\n            <Tooltip title={tweet.user}>\n              <IconButton\n                aria-label={tweet.user}\n                className=\"search-file_users-item\"\n                color={highlight}\n              >\n                {tweet.user.slice(1, 2).toUpperCase()}\n              </IconButton>\n            </Tooltip>\n          </div>\n          <div className=\"search-message__box\">\n            tweeted:\n            <Typography\n              className={`search-file__title ${titleHighlight}`}\n              variant=\"h6\"\n              component=\"h2\"\n            >\n              {tweet.message}\n            </Typography>\n          </div>\n          <div className=\"search-file__date-box\">\n            <Typography className=\"search-message__date-date\" variant=\"h6\">\n              {timeStamp}\n            </Typography>\n            <Typography\n              className=\"search-file__date-month\"\n              color=\"textSecondary\"\n            >\n              {` ${tweet.timestamp.getDate()} ${\n                dateMap[tweet.timestamp.getMonth()]\n              },${tweet.timestamp.getFullYear()}`}\n            </Typography>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n  return <div>{toRender ? card : null}</div>;\n}\n\nexport default Tweet;\n","import React, { useState, useEffect } from 'react';\nimport './Search.css';\nimport CalendarComponent from '../../components/Search/CalendarEvent';\nimport FileComponent from '../../components/Search/File';\nimport ContactComponent from '../../components/Search/Contact';\nimport MessageComponent from '../../components/Search/Message';\nimport TweetComponent from '../../components/Search/Tweet';\nimport { Twitter, Description, Chat, Event } from '@material-ui/icons';\nimport { Puff } from '@agney/react-loading';\nimport {\n  parseCalendar,\n  parseFiles,\n  parseMessages,\n  parseContancts,\n  parseTweets,\n  generateRandomMsg,\n} from './../../utils/parser_util.js';\nimport ContactsIcon from '@material-ui/icons/Contacts';\nimport axios from 'axios';\nfunction Search(props) {\n  const [calendarEve, setCalender] = useState([]);\n  const [contactsEve, setContacts] = useState([]);\n  const [slackEve, setSlack] = useState([]);\n  const [dropboxEve, setDropbox] = useState([]);\n  const [tweetEve, setTweet] = useState([]);\n  const [msgEveNew, setMsgNew] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    axios\n      .post(\n        `https://us-central1-rishabh-gajra.cloudfunctions.net/dashbaord_data`\n      )\n      .then((res) => {\n        console.log(res.data);\n        if (res.data.success == true) {\n          console.log(res.data);\n          setLoading(false);\n          const calendarParsedEvents = parseCalendar(res.data.calendar);\n          const filesParsed = parseFiles(res.data.dropbox);\n          const slackMessagesParsed = parseMessages(res.data.slack);\n          const contactsParsed = parseContancts(res.data.contacts);\n          const tweetsParsed = parseTweets(res.data.tweet);\n          setCalender(calendarParsedEvents);\n          setContacts(contactsParsed);\n          setSlack(slackMessagesParsed);\n          setDropbox(filesParsed);\n          setTweet(tweetsParsed);\n          setLoading(false);\n        } else {\n        }\n      });\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setLoading(true);\n      axios\n        .post(\n          `https://us-central1-rishabh-gajra.cloudfunctions.net/get_message`\n        )\n        .then((res) => {\n          // console.log(res.data);\n          if (res.data.success == true) {\n            console.log(res.data);\n            const msg = res.data.value;\n            msg['timestamp'] = new Date();\n            setMsgNew([...msgEveNew, msg]);\n            setLoading(false);\n          } else {\n          }\n        });\n    }, 60000);\n    return () => clearInterval(interval);\n  }, [slackEve, msgEveNew]);\n  const calendarEvents = calendarEve.map((calendar) => {\n    return (\n      <CalendarComponent\n        calendar={calendar}\n        search={props.search}\n        key={calendar.id}\n      />\n    );\n  });\n  const fileRes = dropboxEve.map((file) => {\n    return <FileComponent file={file} search={props.search} key={file.id} />;\n  });\n  const contactRes = contactsEve.map((contact) => {\n    return (\n      <ContactComponent\n        contact={contact}\n        search={props.search}\n        key={contact.id}\n      />\n    );\n  });\n  const slackRes = slackEve.map((slack) => {\n    return (\n      <MessageComponent message={slack} search={props.search} key={slack.id} />\n    );\n  });\n  const msgsNew = msgEveNew.map((slack) => {\n    return (\n      <MessageComponent\n        message={slack}\n        search={props.search}\n        key={slack.id}\n        animate\n      />\n    );\n  });\n  const tweetRes = tweetEve.map((tweet) => {\n    return <TweetComponent tweet={tweet} search={props.search} />;\n  });\n  const msgs = [...slackRes, ...msgsNew];\n  return (\n    <div className=\"search-container\">\n      <h1>\n        Searched Matches in <span className=\"highlight\">pink</span>\n      </h1>\n      <div className=\"center\">\n        <div className=\"search-container__results\">\n          <div className=\"search-calendar-container\">\n            <h3 className=\"search-container__title\">\n              {loading && (\n                <div className=\"loading\">\n                  <Puff width=\"100\" />\n                </div>\n              )}{' '}\n              <Event fontSize=\"small\" />\n              Meetings on calendar:\n            </h3>\n            <div className=\"calendar-container__events\">{calendarEvents}</div>\n          </div>\n          <div className=\"search-container__results-center\">\n            <div className=\"file-container\">\n              <h3 className=\"search-container__title\">\n                <Chat fontSize=\"small\" />\n                Your recent chat history:\n              </h3>\n              <div className=\"dropbox-container__files\">{msgs}</div>\n            </div>\n            <div className=\"file-container\">\n              <h3 className=\"search-container__title\">\n                <Description fontSize=\"small\" />\n                Your files on dropbox:\n              </h3>\n              <div className=\"dropbox-container__files\">{fileRes}</div>\n            </div>\n            <div className=\"file-container\">\n              <h3 className=\"search-container__title\">\n                <Twitter fontSize=\"small\" />\n                Tweets from accounts you follow:\n              </h3>\n              <div className=\"dropbox-container__files\">{tweetRes}</div>\n            </div>\n          </div>\n          <div className=\"contancts-container\">\n            <h3 className=\"search-container__title\">\n              {' '}\n              <ContactsIcon fontSize=\"small\" />\n              Recently contacted:\n            </h3>\n            <div className=\"contanct-container__contacts\">{contactRes}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Search;\n","export const parseCalendar = (cal) => {\n  const calendar = cal;\n  calendar.calendar.forEach(function (calendar, index) {\n    calendar.date = new Date(calendar.date);\n  });\n  // sorting my the next appearing date on the calendar (closest to current date)\n  calendar.calendar.sort((a, b) => (a.date > b.date ? 1 : -1));\n  return calendar.calendar;\n};\n\nexport const parseFiles = (dropbox) => {\n  dropbox.dropbox.forEach(function (dropbox, index) {\n    dropbox.created = new Date(dropbox.created);\n  });\n  //sorting files created by latest created\n  dropbox.dropbox.sort((a, b) => (a.created < b.created ? 1 : -1));\n  return dropbox.dropbox;\n};\n\nexport const parseMessages = (slack) => {\n  slack.slack.forEach(function (message, index) {\n    message.timestamp = new Date(message.timestamp);\n  });\n  // sorting my earliest message\n  slack.slack.sort((a, b) => (a.timestamp > b.timestamp ? 1 : -1));\n  return slack.slack;\n};\n\nexport const parseContancts = (contacts) => {\n  contacts.contacts.forEach(function (contact, index) {\n    contact.last_contact = new Date(contact.last_contact);\n  });\n  // sorting with most recent contact being first\n  contacts.contacts.sort((a, b) => (a.last_contact < b.last_contact ? 1 : -1));\n  return contacts.contacts;\n};\n\nexport const parseTweets = (tweet) => {\n  tweet.tweet.forEach(function (tweet, index) {\n    tweet.timestamp = new Date(tweet.timestamp);\n  });\n  // sorting with latest tweet\n  tweet.tweet.sort((a, b) => (a.last_contact > b.last_contact ? 1 : -1));\n  return tweet.tweet;\n};\n\nexport const generateRandomMsg = (msgs) => {\n  const msg = {\n    id: Math.floor(Math.random() * 1000),\n    channel: msgs[Math.floor(Math.random() * msgs.length)].channel,\n    author: msgs[Math.floor(Math.random() * msgs.length)].author,\n    message: msgs[Math.floor(Math.random() * msgs.length)].message,\n    matching_terms:\n      msgs[Math.floor(Math.random() * msgs.length)].matching_terms,\n    timestamp: new Date(),\n  };\n  return msg;\n};\n","import React, { useState } from 'react';\n// import { Switch, Route } from 'react-router-dom';\n\nimport Navigation from './components/common/Navigation';\n\nimport { Search } from './containers';\n// import { BrowserRouter } from 'react-router-dom';\n\nimport './App.css';\n\nfunction App() {\n  const [search, setSearch] = useState('');\n  return (\n    <div className=\"App\">\n      <Navigation search={search} setSearch={setSearch} />\n      {/* <div style={{ scroll: 'overflow' }}> */}\n        <Search search={search} />\n      {/* </div> */}\n      {/* <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Search} />\n        </Switch>\n      </BrowserRouter> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}